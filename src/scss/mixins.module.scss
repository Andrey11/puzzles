%robotBaseAnimationProps {
  animation-timing-function: ease-out;
  animation-iteration-count: 1;
  animation-direction: normal;
  animation-fill-mode: forwards;
  animation-play-state: running;
}

@mixin cellLetterSpan($width, $height, $margin, $fontWeight) {
  border: thin solid var(--mdc-theme-puzzle-miss, #c2b9b9);
  margin: $margin;
  width: $width;
  height: $height;
  display: inline-block;
  text-align: center;
  font-weight: $fontWeight;
  text-transform: uppercase;
}


@mixin headerIconItem() {
  color: var(--mdc-theme-puzzle-robot-primary, #557cb3);
  font-size: 1.3rem;
}

/**
 * Adds max-height to $heightVH, and height to 100%.
 */
@mixin addHeightVH($heightVH) {
  max-height: calc(var(--vh, 1vh) * #{$heightVH});
  height: 100%;
}

/**
 * Returns tooltip arrow color overwrite style
 * @position - arrow position (top, bottom, left, right)
 * @color - tooltip arrow color
 */
@mixin tooltipArrowColor($position, $color) {
  &[data-popper-placement^='#{$position}'] {
    > [class*='tooltip-arrow']::before {
      border-#{$position}-color: #{$color} !important;
    }
  }
}

/**
 * Creates an incremental transition delay for each child <div> elevment
 * first element  
 */
@mixin createTransitionDelays($startIndex, $endIndex, $delayByMs) {
  @for $i from $startIndex through $endIndex {
    div:nth-child(#{$i}n) {
      transition-delay: #{$i * $delayByMs - 50}ms;
    }
  }
}

@mixin shake-animation($duration, $iterationCount) {
  animation: shake $duration;
  animation-iteration-count: $iterationCount;
}

@mixin scale-animation($duration, $iterationCount) {
  animation: scaleCellOnInput $duration;
  animation-iteration-count: $iterationCount;
}

@mixin robot-appear($duration, $delay) {
  animation-name: robotAppear;
  animation-duration: $duration;
  animation-delay: $delay;
  @extend %robotBaseAnimationProps;
}

@mixin robot-disappear($duration, $delay) {
  animation-name: robotDisappear;
  animation-duration: $duration;
  animation-delay: $delay;
  @extend %robotBaseAnimationProps;
}

@mixin robot-disappear-to-antena($duration, $delay) {
  animation-name: robotDisappearToAntena;
  animation-duration: $duration;
  animation-delay: $delay;
  @extend %robotBaseAnimationProps;
}

@mixin robot-appear-to-antena($duration, $delay) {
  animation-name: robotAppearToAntena;
  animation-duration: $duration;
  animation-delay: $delay;
  @extend %robotBaseAnimationProps;
}

@mixin robot-poof($duration, $delay) {
  animation-name: robotAppearToAntena;
  animation-duration: $duration;
  animation-delay: $delay;
  @extend %robotBaseAnimationProps;
  animation-timing-function: linear;
}

@mixin robot-lurk($duration, $delay) {
  animation-name: robotLurk;
  animation-duration: $duration;
  animation-delay: $delay;
  @extend %robotBaseAnimationProps;
}

@mixin robot-stop-lurk($duration, $delay) {
  animation-name: robotStopLurk;
  animation-duration: $duration;
  animation-delay: $delay;
  @extend %robotBaseAnimationProps;
  animation-timing-function: ease-in-out;
}

@mixin robot-blink($duration, $delay) {
  animation: robotBlink $duration ease-in-out $delay infinite;
}

@keyframes shake {
  0% {
    transform: translate(1px, 0px) rotate(0deg);
  }
  10% {
    transform: translate(-1px, 0px) rotate(0deg);
  }
  20% {
    transform: translate(-3px, 0px) rotate(0deg);
  }
  30% {
    transform: translate(1px, 0px) rotate(0deg);
  }
  40% {
    transform: translate(3px, 0px) rotate(0deg);
  }
  50% {
    transform: translate(-1px, 0px) rotate(-0deg);
  }
  60% {
    transform: translate(-3px, 0px) rotate(0deg);
  }
  70% {
    transform: translate(3px, 0px) rotate(-0deg);
  }
  80% {
    transform: translate(-1px, 0px) rotate(0deg);
  }
  90% {
    transform: translate(1px, 0px) rotate(0deg);
  }
  100% {
    transform: translate(1px, 0px) rotate(-0deg);
  }
}

@keyframes scaleCellOnInput {
  0% {
    transform: scale(1);
  }
  10% {
    transform: scale(1.05);
  }
  20% {
    transform: scale(1.05);
  }
  30% {
    transform: scale(1.1);
  }
  40% {
    transform: scale(1.1);
  }
  50% {
    transform: scale(1.2);
  }
  60% {
    transform: scale(1.1);
  }
  70% {
    transform: scale(1.1);
  }
  80% {
    transform: scale(1.05);
  }
  90% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes robotLurk {
  40% {
    transform: translateY(30px);
  }
  100% {
    transform: translateY(30px);
  }
}

@keyframes robotStopLurk {
  0% {
    transform: translateY(30px);
  }
  70% {
    transform: translateY(0);
  }
  90% {
    transform: translateY(-5px);
  } 
  100% {
    transform: translateY(0);
  }
}

@keyframes robotAppear {
  0% {
    transform: translate(0, 70px);
  }
  75%,
  80% {
    transform: translate(0, 30px);
  }
  90%,
  100% {
    transform: translate(0, 0);
  }
}

@keyframes robotDisappearToAntena {
  0% {
    transform: translateY(30px);
  }
  60%,
  100% {
    transform: translateY(65px);
  }
}

@keyframes robotAppearToAntena {
  0% {
    transform: translate(0, 65px);
  }
  60%,
  100% {
    transform: translate(0, 30px);
  }
}

@keyframes robotDisappear {
  0% {
    top: 65px;
  }
  90%,
  100% {
    transform: translate(0, 70px);
  }
}

@keyframes robotPoofAction {
  0% {
    transform: scale(0.1);
    opacity: 1;
  }
  30% {
    transform: scale(1.05);
  }
  40%,
  70% {
    transform: scale(1);
  }
  90% {
    transform: scale(0.5);
    opacity: 1;
  }
  100% {
    transform: scale(0.1);
    opacity: 0;
  }
}

@keyframes robotBlink {
  0%,
  100% {
    transform: scale(1, 0.05);
  }
  5%,
  95% {
    transform: scale(1, 1);
  }
}
