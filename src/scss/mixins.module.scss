/**
 * Adds max-height to $heightVH, and height to 100%.
 */
@mixin addHeightVH($heightVH) {
  max-height: calc(var(--vh, 1vh) * #{$heightVH});
  height: 100%;
}

/**
 * Returns tooltip arrow color overwrite style
 * @position - arrow position (top, bottom, left, right)
 * @color - tooltip arrow color
 */
@mixin tooltipArrowColor($position, $color) {
  &[data-popper-placement^=#{$position}] {
    > [class*='tooltip-arrow']::before {
      border-#{$position}-color: #{$color} !important;
    }
  }
}

/**
 * Creates an incremental transition delay for each child <div> elevment
 * first element  
 */
@mixin createTransitionDelays($startIndex, $endIndex, $delayByMs) {
  @for $i from $startIndex through $endIndex {
    div:nth-child(#{$i}n) {
      transition-delay: #{$i * $delayByMs - 50}ms;
    }
  }
}

@mixin shake-animation($time, $iterationCount) {
  animation: shake $time;
  animation-iteration-count: $iterationCount;
}

@mixin scale-animation($time, $iterationCount) {
  animation: scaleCellOnInput $time;
  animation-iteration-count: $iterationCount;
}

@keyframes shake {
  0% {
    transform: translate(1px, 0px) rotate(0deg);
  }
  10% {
    transform: translate(-1px, 0px) rotate(0deg);
  }
  20% {
    transform: translate(-3px, 0px) rotate(0deg);
  }
  30% {
    transform: translate(1px, 0px) rotate(0deg);
  }
  40% {
    transform: translate(3px, 0px) rotate(0deg);
  }
  50% {
    transform: translate(-1px, 0px) rotate(-0deg);
  }
  60% {
    transform: translate(-3px, 0px) rotate(0deg);
  }
  70% {
    transform: translate(3px, 0px) rotate(-0deg);
  }
  80% {
    transform: translate(-1px, 0px) rotate(0deg);
  }
  90% {
    transform: translate(1px, 0px) rotate(0deg);
  }
  100% {
    transform: translate(1px, 0px) rotate(-0deg);
  }
}

@keyframes scaleCellOnInput {
  0% {
    transform: scale(1);
  }
  10% {
    transform: scale(1.05);
  }
  20% {
    transform: scale(1.05);
  }
  30% {
    transform: scale(1.1);
  }
  40% {
    transform: scale(1.1);
  }
  50% {
    transform: scale(1.2);
  }
  60% {
    transform: scale(1.1);
  }
  70% {
    transform: scale(1.1);
  }
  80% {
    transform: scale(1.05);
  }
  90% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}
